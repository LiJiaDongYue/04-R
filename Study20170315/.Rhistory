mydata <- data.frame(a=numeric(),b=character());
mydata <- edit(mydata)
mydata
mydata <- fix(mydata)
mydata
head(mtcars)
attach(mtcars)
#head(mtcars)
plot(wt,wpg)
abline(lm(mpg~wt))
title("Regression 0f MPG ON Weight")
detach(mtcars)
plot(wt,wpg)
plot(wt,mpg)
attach(mtcars)
plot(wt,mpg)
abline(lm(mpg~wt))
title("Regression 0f MPG ON Weight")
detach(mtcars)
dose <- c(20,30,40,50,60)
drugA <- c(16,20,27,40,60)
drugB <- c(15,18,25,31,40)
data.drug <- data.frame(dose=dose,drugA=drugA,drugB=drugB)
data.drug
opar <- par(no.readonly = T)
opar <- par(no.readonly = T)
par(pin=c(2,3))
par(lwd=2,cex=1.5)
par(cex.axis=.75,font.axis=3)
plot(data.drug$dose,data.drug$drugA,type = "b",pch=19,lty=2,col="red")
plot(data.drug$dose,data.drug$drugA,type = "b",pch=19,lty=2,col="red",bg="green")
plot(data.drug$dose,data.drug$drugA,type = "b",pch=19,lty=2,col="red",bg="green")
plot(data.drug$dose,data.drug$drugA,type = "b",pch=23,lty=6,col="blue",bg="green")
par(xlab="dose",ylab="druaB")
plot(data.drug$dose,data.drug$drugB,type = "b",pch=23,lty=6,col="blue",bg="green")
plot(data.drug$dose,data.drug$drugB,type = "b",xlab="dose",ylab="druaB",pch=23,lty=6,col="blue",bg="green")
plot(data.drug$dose,data.drug$drugB,type = "b",xlab="dose",ylab="druaB",main = "DOSE&DRUUB COMPARE",
sub = "author:Leal", pch=23,lty=6,col="blue",bg="green")
plot(x,y,type = "b",pch=21,col="red",yaxt="n",lty=3,ann = FALSE)
x <- c(1:10)
y <- x
z <- x/10
opar <- par(no.readonly = TRUE)
par(mar=c(5,4,4,8)+0.1)#增加边界大小
plot(x,y,type = "b",pch=21,col="red",yaxt="n",lty=3,ann = FALSE)
lines(x,z,type = "b",pch=22,col="blue",lty=2)#添加 x 对1/ x 的直线
axis(2,at = x,labels = x,col.axis="red",las=2)#绘制你自己的坐标轴
axis(z,at = z,labels = round(z,digits = 2),col.axis="blue",las=2,cex.axis=0.7,tick = -.01)
axis(z,at = z,labels = round(z,digits = 2),
col.axis="blue",las=2,cex.axis=0.7,tick = -.01)
axis(4,at = z,labels = round(z,digits = 2),col.axis="blue",las=2,cex.axis=0.7,tick = -.01)
mtext("y=1/x",side = 4,line = 3,cex.lab=1,las=2,col = "blue")#添加标题和文本
title("An example",xlab = "x values",ylab = "y=x")
z <- 10/x
lines(x,z,type = "b",pch=22,col="blue",lty=2)#添加 x 对1/ x 的直线
x <- c(1:10)
y <- x
z <- 10/x
opar <- par(no.readonly = TRUE)
par(mar=c(5,4,4,8)+0.1)#增加边界大小
plot(x,y,type = "b",pch=21,col="red",yaxt="n",lty=3,ann = FALSE)#绘制 x 对 y 的图形
lines(x,z,type = "b",pch=22,col="blue",lty=2)#添加 x 对1/ x 的直线
axis(2,at = x,labels = x,col.axis="red",las=2)#绘制你自己的坐标轴
axis(4,at = z,labels = round(z,digits = 2),col.axis="blue",las=2,cex.axis=0.7,tick = -.01)
mtext("y=1/x",side = 4,line = 3,cex.lab=1,las=2,col = "blue")#添加标题和文本
title("An example",xlab = "x values",ylab = "y=x")
par(opar)
install.packages("Hmisc")
install.packages("viridis")
install.packages("Hmisc")
opar <- par(no.readonly = T)
par(pin=c(2,3))#size
par(lwd=2,cex=1.5)
par(cex.axis=.75,font.axis=3)#font
plot(data.drug$dose,data.drug$drugA,type = "b",pch=19,lty=2,col="red")
lines(dose,drugB,type = "b",pch=17,lty=2,col="blue")
abline(h = c(30),lwd=1.5,lty=2,col="gray")
library(Hmisc)
minor.tick(nx=3,ny=3,tick.ratio=0.5)#添加次要刻度线
legend("topleft",inset = 0.05,title = "Drug TYpe",c("A","B"),lty = c(1,2),pch = c(15,17),col = c("red","blue"))
#par(xlab="dose",ylab="druaB")
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
par(mar=c(5,4,4,8)+0.1)#增加边界大小
head(mtcars)
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
par(mar=c(5,4,4,8)+5)#增加边界大小
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
par(mar=c(5,4,4,8)+0.5)#增加边界大小
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
par(mar=c(5,4,4,8)+1.5)#增加边界大小
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
par(mar=c(5,4,4,8)+0.01)#增加边界大小
#text&mtext
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue",pin=c(5,7))
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue",pin=c(5,7))
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue",pin=c(7,10))
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
par(pin=c(7,10))
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
par(pin=c(3,4))
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
attach(mtcars)
par(pin=c(2,3))
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
attach(mtcars)
par(pin=c(3,4))
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
attach(mtcars)
par(pin=c(3,2))
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
attach(mtcars)
par(pin=c(2,4))
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
par(opar)
opar <- par(no.readonly = TRUE)
attach(mtcars)
par(pin=c(2,3))
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
#text&mtext
attach(mtcars)
par(pin=c(4,3))
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
attach(mtcars)
opar <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
plot(wt,mpg,main = "wt~mpg")
plot(wt,disp,main = "wt~disp")
hist(wt,main = "hist of wt")
boxplot(wt,main="boxplot oc wt")
par(opar)
detach(mtcars)
par(opar)
attach(mtcars)
opar <- par(no.readonly = TRUE)
par(mfrow=c(2,2))
plot(wt,mpg,main = "wt~mpg")
plot(wt,disp,main = "wt~disp")
hist(wt,main = "hist of wt")
boxplot(wt,main="boxplot oc wt")
par(opar)
detach(mtcars)
attach(mtcars)
plot(wt,mpg,main = "Milege vs Car.Weight",xlab = "Weight",ylab = "Milege",pch=18,col="blue")
text(wt,mpg,row.names(mtcars),cex = 0.6,pos = 4,col = "red")
detach(mtcars)
attach(mtcars)
opar <- par(no.readonly = TRUE)
par(mfrow=c(3,1))
hist(wt)
hist(mpg)
hist(disp)
par(opar)
detach(mtcars)
attach(mtcars)
opar <- par(no.readonly = TRUE)
#par(mfrow=c(3,1))
layout(matrix(c(1,1,2,3),2,2,byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
par(opar)
detach(mtcars)
opar <- par(no.readonly = TRUE)
par(flg=c(0,0.8,0,0.8))#设置散点图
plot(mtcars$wt,mtcars$mpg,xlab = "Miles per Gallon",ylab = "Car Weight")
par(fig=c(0,0.8,0.55,1),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE,axes=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$wt,axes=FALSE)
mtext("Enhanced Scatterplot",side = 3,outer = TRUE,line = -3)
par(opar)
opar <- par(no.readonly = TRUE)
par(flg=c(0,0.8,0,0.8))#设置散点图
plot(mtcars$wt,mtcars$mpg,xlab = "Miles per Gallon",ylab = "Car Weight")
par(fig=c(0,0.8,0.55,1),new=TRUE)
boxplot(mtcars$wt,horizontal = TRUE,axes=FALSE)
par(fig=c(0.65,1,0,0.8),new=TRUE)
boxplot(mtcars$wt,axes=FALSE)
mtext("Enhanced Scatterplot",side = 3,outer = TRUE,line = -3)
par(opar)
git log
install.packages("RSADBE")
data("Severity_Counts")
hist(airquality$Wind)
hist(airquality$Wind,xlab = "wind")
boxplot(airquality$Wind)
boxplot(airquality$Wind,xlac="Wind",ylab="Speed(mph)")
with(airquality,plot(Wind,Temp))
title(main = "Wind ang Temp in NYC",sub = "AUTHER:leal")
title(main = "Wind ang Temp in NYC",sub = "atuther:leal")
with(airquality,plot(Wind,Temp))
title(main = "Wind ang Temp in NYC",sub = "atuther:leal")
with(subset(airquality,Month=9),points(Wind,col="red"))
title(main = "Wind ang Temp in NYC",sub = "atuther:leal",type="n")
with(airquality,plot(Wind,Temp))
title(main = "Wind ang Temp in NYC",sub = "atuther:leal",type="n")
with(airquality,plot(Wind,Temp),main = "Wind ang Temp in NYC",sub = "atuther:leal",type="n")
hist(airquality$Wind,xlab = "wind")
boxplot(airquality$Wind,xlac="Wind",ylab="Speed(mph)")
with(airquality,plot(Wind,Temp),main = "Wind ang Temp in NYC",sub = "atuther:leal",type="n")
with(subset(airquality,Month=9),points(Wind,col="red"))
with(airquality,plot(Wind,Temp,,main = "Wind ang Temp in NYC",sub = "atuther:leal",type="n"))
with(subset(airquality,Month=9),points(Wind,col="red"))
with(subset(airquality,Month=9),points(Wind,Temp,col="red"))
with(airqualite,boxplot(Wind~Temp))
with(airquality,boxplot(Wind~Temp))
summary(airquality)
summary(airquality$Month)
with(airquality,boxplot(Wind~Month))
with(subset(airquality,Month=5),points(Wind,Temp,col="blue"))
with(airquality,plot(Wind,Temp,main = "Wind ang Temp in NYC",sub = "atuther:leal",type="n"))
with(subset(airquality,Month=9),points(Wind,Temp,col="red"))
with(subset(airquality,Month=5),points(Wind,Temp,col="blue"))
with(subset(airquality,Month=9),points(Wind,Temp,col="red"))
with(subset(airquality,Month %in% c(6,7,8)),points(Wind,Temp,col="green"))
with(subset(airquality,Month==5),points(Wind,Temp,col="blue"))
fit <- lm(Wind~Temp,airquality)
fit <- lm(Temp~Wind,airquality)
abline(fit,lwd=2)
legend("topright",pch = 1,col = c("red","blue","green"),legend = c("September","May","Other"))
legend("topright",pch = 0.5,col = c("red","blue","green"),legend = c("September","May","Other"))
legend("topright",pch = 1,col = c("red","blue","green"),legend = c("September","May","Other"))
legend("topright",pch = 1,col = c("red","blue","green"),legend = c("Sep","May","Other"))
par(bg)
par("bg")
par("bg","col")
par("bg","col","mar","mfrow","mfcol")
with(airquality,xyplot(Wind,Temp))
library(lattice)
with(airquality,xyplot(Wind,Temp))
with(airquality,xyplot(Wind))
xyplot(Temp~Qzone,data = airquality)
head(ai
r)
head(airquality)
library(lattice)
xyplot(Temp~Qzone,data = airquality)
xyplot(Temp~Qzone,data = airquality)
xyplot(Temp~Ozone,data = airquality)
airquality$Month <- factor(airquality$Month)
xyplot(Temp~Ozone,Month,layout=c(5,1))
xyplot(Temp~Ozone,airquality$Month,layout=c(5,1))
xyplot(Temp~Ozone|Month,airquality,layout=c(5,1))
q <- xyplot(Temp~Ozone,data = airquality)
class(q)
set.seed(1)
x <- rnorm(100)
f <- rep(0:1,each=50)
y <- x+f-x*f+rnorm(100,sd = 0.5)
f <- factor(f,labels = c("Group1","Groep2"))
x
y
f
xyplot(x~y|f,layout=c(2,1))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f,panel = function(x,y){
panel.xyplot(x,y)
panel.abline(v=mean(x),h = mean(y),lwd = 2)
panel.lmline(x,y,col="red")
})
library(ggplot2)
ggplot(Wind,Temp,airquality)
qplot(Wind,Temp,airquality)
head(airquality)
qplot(Wind,Temp,airquality)
qplot(Wind,Temp,airquality)
qplot(Wind,Temp,data=airquality)
qplot(Wind,Temp,data=airquality,col=Month)
qplot(Wind,Temp,data=airquality,col=I("red"))#I
qplot(Wind,Temp,data=airquality,size=Month)#size
qplot(Wind,Temp,data=airquality,size=Month,xlab = "M-Wind",ylab = "M-Temp",
main = "Temp of Month in", sub="leal")#size
qplot(Wind,Temp,data=airquality,size=Month,geom = c("points","smooth")
xlab = "M-Wind",ylab = "M-Temp",main = "Temp of Month in")
qplot(Wind,Temp,data=airquality,size=Month,geom = c("point","smooth"),
xlab = "M-Wind",ylab = "M-Temp",main = "Temp of Month in")
qplot(Wind,Temp,data=airquality,col=Month,geom = c("point","smooth"),
xlab = "M-Wind",ylab = "M-Temp",main = "Temp of Month in")
qplot(Wind,Temp,data=airquality,col=Month,facets = .~Month,
xlab = "M-Wind",ylab = "M-Temp",main = "Temp of Month in")
opar(par)
rm(opar)
qplot(Wind,Temp,data=airquality,col=Month,facets = .~Month,
xlab = "M-Wind",ylab = "M-Temp",main = "Temp of Month in")
qplot(Wind,data = airquality)
qplot(Wind,data = airquality,fill=Month)
qplot(Wind,data = airquality,geom = "density")
qplot(Wind,data = airquality,geom = "density",col=Month)
qplot(Wind, data = airquality, geom = "dotplot")
qplot(Wind, data = airquality, geom = "dotplot".col=Month)
qplot(Wind, data = airquality, geom = "dotplot",col=Month)
qplot(Wind, data = airquality, geom = "dotplot",col=I("red"))
ggplot(airquality,aes(Wind,Temp))+geom_point()
ggplot(airquality,aes(Wind,Temp))+geom_point(color="stellblue",alpha=0.4,size=5)
ggplot(airquality,aes(Wind,Temp))+geom_point(color="steelblue",alpha=0.4,size=5)
ggplot(airquality,aes(Wind,Temp))+geom_point(aes(col=factor(Month)),alpha=0.4,size=5)
ggplot(airquality,aes(Wind,Temp))+geom_point()+geom_smooth()
ggplot(airquality,aes(Wind,Temp))+geom_point()+stat_smooth()
ggplot(airquality,aes(Wind,Temp))+geom_point()+stat_smooth(method = "lm")
ggplot(airquality,aes(Wind,Temp))+geom_point()+stat_smooth(method = "lm",aes(col=factor(Month)))
ggplot(airquality,aes(Wind,Temp))+geom_point()+stat_smooth(method = "lm",aes(col=factor(Month),group=1))
ggplot(airquality,aes(Wind,Temp,aes(col=factor(Month),group=1)))+geom_point()+stat_smooth(method = "lm")
ggplot(airquality,aes(Wind,Temp,col=factor(Month),group=1))+geom_point()+stat_smooth(method = "lm")
ggplot(airquality,aes(Wind,Temp))+geom_point(es(col=factor(Month)))+geom_smooth()#methpd="loess
ggplot(airquality,aes(Wind,Temp))+geom_point(aes(col=factor(Month)))+geom_smooth()#methpd="loess
ggplot(airquality,aes(Wind,Temp,col=factor(Month))+geom_point()+stat_smooth(method = "lm",aes(group=1)))
source('~/Public/04-R/Study20170315/慕课-可视化.R')
airquality,
aes(Wind, Temp, col = factor(Month)) + geom_point() + stat_smooth(method = "lm", aes(group =
1)
)
ggplot(airquality,
aes(Wind, Temp, col = factor(Month))) + geom_point() + stat_smooth(method = "lm", aes(group =
1))
ggplot(airquality,
aes(Wind, Temp, col = factor(Month))) + geom_point() + stat_smooth(method = "lm", aes(group =
1))
+ stat_smooth(method = "lm")
ggplot(airquality,
aes(Wind, Temp, col = factor(Month))) + geom_point() + stat_smooth(method = "lm", aes(group =1))
+ stat_smooth(method = "lm")
mycolor <- c(brewer.pal(5),"black")
display.brewer.pal(5,"Dark2")
library(RColorBrewer)
mycolor <- c(brewer.pal(5,"Dark2"),"black")
display.brewer.pal(5,"Dark2")
ggplot(airquality,
aes(Wind, Temp, col = factor(Month))) + geom_point() + stat_smooth(method = "lm", aes(group =1))
+ stat_smooth(method = "lm")
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()
+ stat_smooth(method = "lm", aes(group =1))
+ stat_smooth(method = "lm")
+ stat_smooth()
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()
+ stat_smooth(method = "lm", aes(group =1))
+ stat_smooth()
+ stat_smooth(method = "lm", aes(group =1))
+ stat_smooth(method = "lm",se = FALSE)
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()
+ stat_smooth(method = "lm", aes(group =1))
ggplot(airquality, aes(Wind, Temp)) + geom_point(aes(col = factor(Month))) +
geom_smooth()#methpd="loess
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()
+ stat_smooth(method = "lm", aes(group =1))
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()
+ stat_smooth(method = "lm")
+stat_smooth()
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()
+stat_smooth()
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point()+stat_smooth()
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(method = "lm",aes(group=1))+stat_smooth()
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(method = "lm",aes(group=1))+
stat_smooth()+
scale_color_brewer("Month",mycolor)
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(method = "lm", aes(group=1))+
stat_smooth(se = FALSE)+
scale_color_brewer("Month",mycolor)
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(method = "lm", aes(group=1))+
stat_smooth(se = FALSE)+
scale_color_brewer("Month",values=mycolor)
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(method = "lm", aes(group=1))+
stat_smooth(se = FALSE)+
scale_alpha_manual("Month",values=mycolor)
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(method = "lm", aes(group=1),col="All")+
stat_smooth(se = FALSE)+
scale_alpha_manual("Month",values=mycolor)
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(method = "lm", aes(group=1,col="All"))+
stat_smooth(se = FALSE)+
scale_alpha_manual("Month",values=mycolor)
mycolor
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(se = FALSE)+
scale_alpha_manual("Month",values=mycolor)+
facet_grid(.~Month);
ggplot(airquality,aes(Wind, Temp, col = factor(Month))) + geom_point() +
stat_smooth(se = FALSE)+
scale_alpha_manual("Month",values=mycolor)+
facet_grid(.~Month)+
theme_classic()
pal <- colorRamp("red","blue")
pal <- colorRamp(c("red","blue")
pal <- colorRamp(c("red","blue"))
pal <- colorRamp(c("red","blue"))
par(1)
pal <- colorRamp(c("red","blue"))
par(1)
par(0)
pal(0)
pal(seq(0:1,10))
pal(seq(0:1,len=10))
pal(seq(0,1,len=10))
crp <- colorRampPalette("red","yelow")
crp <- colorRampPalette(c("red","yelow"))
crp <- colorRampPalette(c("red","yellow"))
cr <- colorRamp(c("red","blue"))
cr(0)
cr(seq(0,1,len=10))
crp <- colorRampPalette(c("red","yellow"))
crp{1}
crp(1)
crp(seq(0,1,len=10))
crp(10)
brewer.pal.info
cols <- brewer.pal(3,"Greens")
pal <- colorRampPalette(brewer.pal(3,"Greens"))
image(volcano,col = pal(20))
?Devices
Devices
print(Devices)
dev.cur()
head(qbirthday())
head(airquality)
with(airquality,plot(Wind,Temp,xlab = "M-Wind",ylab = "M-Temp",main = "Wind 0f Temp in GTC"))
paf(file="mypictus.pdf")
pDf(file="mypictus.pdf")
pdf(file="mypictus.pdf")
with(airquality,plot(Wind,Temp,xlab = "M-Wind",ylab = "M-Temp",main = "Wind 0f Temp in GTC"))
dev.off()
dev.copy(png,file="mypng")
with(airquality,plot(Wind,Temp,xlab = "M-Wind",ylab = "M-Temp",main = "Wind 0f Temp in GTC"))
dev.copy(png,file="mypng")
dev.off()
dev.copy(png,file="mypng.png")
with(airquality,plot(Wind,Temp,xlab = "M-Wind",ylab = "M-Temp",main = "Wind 0f Temp in GTC"))
dev.copy(png,file="mypng.png")
dev.off()
with(airquality,plot(Wind,Temp,xlab = "M-Wind",ylab = "M-Temp",main = "Wind 0f Temp in GTC"))
dev.copy(png,file="mypng.png")
dev.off()
